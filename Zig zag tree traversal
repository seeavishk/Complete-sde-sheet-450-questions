// With reverse
class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if(root == NULL)
            return {};
        
        vector<vector<int>> ans;
        queue<TreeNode *> q;
        q.push(root);
        int count = 1;

        while(!q.empty()){
            int size = q.size();
            vector<int> res;

            for(int i=0; i<size; i++){
                TreeNode *curr = q.front();
                q.pop();
                res.push_back(curr->val);

                if(curr->left != NULL)
                    q.push(curr->left);
                if(curr->right != NULL)
                    q.push(curr->right);
            }

            if(count%2 != 0)
                ans.push_back(res);
            else{
                reverse(res.begin(), res.end());
                ans.push_back(res);
            }
            count++;
        }
        return ans;
    }
};

