#include <vector>
#include <unordered_map>
#include <algorithm>

int getLongestZeroSumSubarrayLength(std::vector<int> &arr) {
    int longestSubarray = 0;
    int n = arr.size();
    std::unordered_map<int, int> sumIndexMap;
    int sum = 0;

    for (int i = 0; i < n; i++) {
        sum += arr[i];

        if (sum == 0) {
            longestSubarray = i + 1;
        } else {
            if (sumIndexMap.find(sum) != sumIndexMap.end()) {
                longestSubarray = std::max(longestSubarray, i - sumIndexMap[sum]);
            } else {
                sumIndexMap[sum] = i;
            }
        }
    }

    return longestSubarray;
}
