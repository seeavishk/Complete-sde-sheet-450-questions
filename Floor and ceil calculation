int floor(int arr[], int n, int x){
      int s=0;
      int e=n-1;
      int mid=s+(e-s)/2;
      int ans=-1;
      while( s <= e){
      if(arr[mid] == x){
               ans=arr[mid];
               break;
           }

           else if(arr[mid] < x){

               ans=arr[mid];

               s=mid+1;

           }

           else{

               e=mid-1;
           }
           mid=s+(e-s)/2;
      }
      return ans;
}
int ceil(int arr[], int n, int x){
      int s=0;
      int e=n-1;
      int mid=s+(e-s)/2;
      int ans=-1;
      while( s <= e){

           if(arr[mid] == x){

               ans=arr[mid];
               break;
           }
           else if(arr[mid] < x){   
               s=mid+1;
           }
           else{
               ans=arr[mid];
               e=mid-1;
           }
           mid=s+(e-s)/2;
      }
      return ans;
}
pair<int, int> getFloorAndCeil(int arr[], int n, int x) {

    sort(arr,arr+n);

    return make_pair(floor(arr,n,x),ceil(arr,n,x) );

}

 

1 Upvoted
No comments yet
Be the first to share what you think
